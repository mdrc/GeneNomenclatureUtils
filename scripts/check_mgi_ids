#!/software/bin/perl
### nomenclature

=pod

=head1 NAME - check_mgi_ids

=head1 COMMAND LINE PARAMETERS

Required parameters
  --file                    file to be checked                
  --mgi_id_column           column containing IDs to check (>= 1)
  --output_column           column to output results (>=1 ) 
  
Optional parameters
  --skip_title              skip first (title) row

=head1 DESCRIPTION

Checks MGI IDs (eg. MGI:1888986) in a tab-delimited file

Looks for the nomenclature file called 'MRK_List2.sql.rpt' in the
directory pointed to by $ENV{MGI_dir}

Output to STDOUT

Example command line

./check_mgi_ids --file=my_file.txt --mgi_id_column=1
--skip_title --output_column=1 > my_output.txt

This will prepend a column to the file with the results of the
check.

=head1 AUTHOR - mike_croning@hotmail.com

=cut 

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::Parser;
use GeneNomenclatureUtils::TabFileParser qw(
    show_perldoc
);
use Getopt::Long;

{
   print STDERR "\n$0\n", '=' x length($0), "\n\n";
   my ($file, $mgi_id_column, $output_column, $skip_title);
        
    GetOptions(
        "file=s"              => \$file,
        "mgi_id_column=i"     => \$mgi_id_column,
        "output_column=i"     => \$output_column,
        "skip_title"          => \$skip_title,
    ) or show_perldoc();

    ### Check we have the correct parameters
    unless ($file) {
        show_perldoc('Must set --file');
    }
    unless ($mgi_id_column and $mgi_id_column >= 1) {
        show_perldoc("Must set --mgi_id_column >= 1");
    }    
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }

    ### Setup parser
    my $parser = GeneNomenclatureUtils::Parser->new(
        'MGI_dir', 'MRK_List2.rpt', 'mgi_accession_id');
    $parser->add_filter('type', 'nomatch', 'Gene'); #Excludes type !~ /Gene/  
    $parser->parse;

    ### Output attributes
    $parser->output_attribute('mgi_accession_id'); #Parser needs one specified
    $parser->file_process_mode('check');

    ### Convert
    $parser->process_file($file, $mgi_id_column, $output_column
        , $skip_title,  'MGI ID CHECK');
}
