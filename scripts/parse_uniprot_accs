#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - parse_uniprot_accs

=head1 DESCRIPTION

Parses the UniProt uniprot_sprot.dat and uniprot_trembl.dat files expecting
to find them in the directory pointed to by $ENV{SWISS_dir}

These can be downloaded from:

ftp://ftp.ebi.ac.uk/pub/databases/uniprot/knowledgebase/uniprot_sprot.dat.gz
ftp://ftp.ebi.ac.uk/pub/databases/uniprot/knowledgebase/uniprot_trembl.dat.gz

Produces tab-delimited lines like:

Q197F8  Q197F8  primary    tax_id\n
Q197F7  Q197F7  primary    tax_id\n
P92177  P92177  primary    tax_id\n
Q8IN86  P92177  secondary  tax_id\n
Q8IN87  P92177  secondary  tax_id\n
Q9VEA8  P92177  secondary  tax_id\n

These can be written to a file and later used to look up the current primary
accessions for records that were retired or merged, i.e. their accessions 
became secondary.

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::TabFileParser qw(
    show_perldoc
);

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    unless ($ENV{SWISS_dir}) {
        show_perldoc("Must set \$ENV{SWISS_dir}\n");
    }
    
    parse_swissprot_file($ENV{SWISS_dir} . '/uniprot_sprot.dat');
    parse_swissprot_file($ENV{SWISS_dir} . '/uniprot_trembl.dat');
}


{
    sub parse_swissprot_file {
        my ( $file ) = @_;
        
        local *FILE;
        open (FILE, "<$file") 
            or die "Could not open file: '$file' $!";
        print STDERR "Parsing: $file\n";
        
        my $primary_count   = 0;
        my $secondary_count = 0;
        my $line_count      = 0;
        
        while (defined(my $ac_line = <FILE>)) {
        
            $line_count++;
            chomp($ac_line);
        
            if ($ac_line =~ s/^AC\s\s\s//) {
                $ac_line =~ s/;$// or die "Error";
            
                if ($line_count % 10000 == 0) {
                    print STDERR '.';
                }
                
                ### Look for the species - OX line
                my $tax_id = <FILE>;
                $line_count++;
                while ($tax_id !~ s/^OX\s\s\sNCBI_TaxID=//) {
                    $tax_id = <FILE>;
                    $line_count++;
                }
                chomp($tax_id);
                chop($tax_id);
                unless ($tax_id =~ /^\d+$/) {
                    confess "Error parsing taxonomy ID: '$tax_id'\n";
                }
                
                next unless $tax_id == 9606;
                $ac_line =~ s/\s+//g;
                my @ids = split(';', $ac_line);
                
                my $primary = shift(@ids);
                print "$primary\t$primary\tprimary\t$tax_id\n";
                $primary_count++;
                
                foreach my $secondary (@ids) {
                    print "$secondary\t$primary\tsecondary\t$tax_id\n";
                    $secondary_count++;
                    
                }
            }
        }
        close (FILE) or die "Could not close file";
        print STDERR "\n";
        print STDERR "Primary   IDs parsed: $primary_count\n";
        print STDERR "Secondary IDs parsed: $secondary_count\n";
        print STDERR "Parsed lines        : $line_count\n\n"; 
    }
}
