#!/software/bin/perl
### nomenclature

=pod

=head1 NAME - add_rgd_symbol_by_mgi_id

=head1 COMMAND LINE PARAMETERS

Required parameters
  --file                    file to be processed                
  --rgd_id_column           column containing RGI IDs (>= 1)
  --output_column           column to output added symbols (>= 1)
  
Optional parameters
  --skip_title              skip first (title) row

=head1 DESCRIPTION

Adds RGD symbols (e.g. Dlg3) by RGD ID (e.g. 68423)

Looks for the nomenclature file called 'GENES_RAT.txt' in the
directory pointed to by $ENV{RGD_dir}

Output to STDOUT

Example command line

./add_rgd_symbol_by_rgd_id --file=my_file.txt --rgd_id_column=1
--skip_title --output_column=1 > my_output.txt

This will prepend a column to the file with RGD Symbols based on RGD IDs,
reporting which ones are not matched in the RGD file.

=head1 AUTHOR - mike_croning@hotmail.com

=cut 

use strict;
use warnings;
use Carp;
use DPStore::Utils qw(
    show_perldoc
);
use DPStore::Utils::SeqIDNomenclature qw(
    check_or_translate_ids_in_file
);   
use GeneNomenclatureUtils::Parser;
use Getopt::Long;

{
   print STDERR "\n$0\n", '=' x length($0), "\n\n";
   my ($file, $rgd_column, $output_column, $skip_title);
        
    GetOptions(
        "file=s"              => \$file,
        "rgd_id_column=i"     => \$rgd_column,
        "output_column=i"     => \$output_column,
        "skip_title"          => \$skip_title,
    ) or show_perldoc();
    show_perldoc("Must set --file") unless $file;
    unless ($rgd_column and $rgd_column >= 1) {
        show_perldoc("Must set --rgd_id_column >= 1");
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }

    my $parser = GeneNomenclatureUtils::Parser->new(
        'RGD_dir', 'GENES_RAT.txt', 'gene_rgd_id');
    $parser->output_attribute('symbol');
    $parser->parse;


    ### Do the translation
    check_or_translate_ids_in_file($file, $parser, 'RGD SYMBOL'
        , undef, $rgd_column, $output_column, $skip_title, 'translate'
        , $parser->get_no_match_symbols
    );
}
