#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_mgi_id_by_hgnc_id

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to check
  --hgnc_id_column          column with HGNC IDs (>=1)  
  --output_column           column to output check results (>=1)
  
Optional parameters
  --skip_title              skip first (title) row

=head1 DESCRIPTION

Add orthologous mouse MGI IDs by HGNC IDs to the specified column
of the tab-delimited file

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::Parser;
use GeneNomenclatureUtils::TabFileParser qw(
    show_perldoc
);
use Getopt::Long;
use Data::Dumper;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $hgnc_column, $output_column, $skip_title);
        
    GetOptions(
        "file=s"                => \$file,
        "hgnc_id_column=i"      => \$hgnc_column,
        "output_column=i"       => \$output_column,
        "skip_title"            => \$skip_title,
    ) or show_perldoc();
    
    ### Check we have the correct parameters
    unless ($file) {
        show_perldoc('Must set --file');
    }
    unless ($hgnc_column and $hgnc_column >= 1) {
        show_perldoc("Must set --hgnc_id_column >= 1");
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }
    
    ### Setup parser
    my $parser = GeneNomenclatureUtils::Parser->new(
        'MGI_dir', 'HMD_HGNC_Accession.rpt', 'hgnc_id');
    $parser->duplicates('delete'); ### Remove ambiguous hgnc_id -> mgi_id
    $parser->parse;
    
    ### Output attributes
    $parser->output_attribute('mgi_accession_id');
    $parser->file_process_mode('translate');
    
    ### Convert
    $parser->process_file($file, $hgnc_column, $output_column
        , $skip_title,  'MGI ID');
}
