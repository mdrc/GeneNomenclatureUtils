#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - dump_column_as_unique

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to process
  --column                  column to dump (>=1)
  
Optional parameters
  --skip_title              skip first (title) row

=head1 DESCRIPTION

Dumps a the specified column from a tab-delimited text file, making
it unique.

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::TabFileParser qw(
    parse_tab_delimited_file_to_array
    show_perldoc
);   
use Data::Dumper;
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $column_num, $skip_title);
    GetOptions(
        "file=s"       => \$file,
        "column=i"     => \$column_num,
        "skip_title"   => \$skip_title
    ) or show_perldoc();
    show_perldoc("Must set --file") unless $file;
    unless (defined($column_num) and $column_num >= 1) {
        show_perldoc("Must set --column (>=1)");
    }

    
    my $data = parse_tab_delimited_file_to_array($file, 'clean');
    my $title = shift(@$data) if $skip_title;

    my $unique = {};
    my $nothing_to_check = 0;
    my $rows_checked     = 0;
    
    foreach my $entry (@$data) {
        
        $rows_checked++;
        my $cell = $entry->[$column_num - 1];
        unless ($cell and length($cell) >= 1) {
            $nothing_to_check++;
        }
        
        $unique->{$cell}++;
    }
    
    if ($skip_title) {
        print "$title->[$column_num - 1]\n";
    }
    
    print join("\n", keys(%$unique)), "\n";
    
    
    print STDERR "\nFile: $file\n";
    print STDERR "Rows checked : $rows_checked\n";
    print STDERR "Unique values: ", scalar(keys(%$unique)), "\n";
    print STDERR "Empty cells  : $nothing_to_check\n";
} 
