#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - count_rows_and_columns

=head1 COMMAND LINE PARAMETERS

Required parameters
  --file                    file to be checked                

Optional paramaeters
  --has_title               treat first row/line as a title line
  --debug                   enable debugging output
   
=head1 DESCRIPTION

Utility to check the dimensions of a tab-delimited files, and also
report its rectangularity

Example command line

./count_rows_and_columns --file=input.txt --has_title

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::TabFileParser qw(
    get_tab_file_geometry
    show_perldoc
);
use Data::Dumper;
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $skip_title, $debug);
        
    GetOptions(
        "file=s"    => \$file,
        "has_title" => \$skip_title,
        "debug"     => \$debug
    ) or show_perldoc();
    
    unless ($file and -e $file) {
        show_perldoc('Must set --file to valid file');
    }
    
    my $geometry = get_tab_file_geometry($file, $skip_title);
    
    print "FILE               : $file\n";
    print "Rectangular        : ";
    if ($geometry->{rectangular}) {
        print "YES\n";
        print "Row count          : $geometry->{rows} ";
        if ($skip_title) {
            print " (excluding title row)";
        }
        print "\n"; 
        print "Column count       : $geometry->{columns}\n";
    } else {
        print "NO\n";
        print "Columns widths     : ", Dumper($geometry->{column_widths}), "\n"
    }
    print "\n";
    
    if ($skip_title) {
        my $titles_by_column = $geometry->{titles};
    
        foreach my $column (sort { $a <=> $b } (keys(%$titles_by_column))) {
            print "  $column", ' ' x (4 - length($column));
            print ": $titles_by_column->{$column}\n";
        }
        print "\n";
    }
    print STDERR Dumper($geometry) if $debug;
}
