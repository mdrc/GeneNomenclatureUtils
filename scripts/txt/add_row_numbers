#!/software/bin/perl
### nomenclature

=pod

=head1 NAME - add_row_numbers

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                file to check
  --output_column       column to output check results (>=1)

Optional parameters
  --skip_title          skip first (title) row

=head1 DESCRIPTION

Numbers each row (or line) in the tab-delimited file specified

Example command line

./add_row_numbers --file=my_file.txt --output_column=1

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::TabFileParser qw(
    parse_tab_delimited_file_to_array
    show_perldoc
);
use Getopt::Long;
use Data::Dumper;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $output_column, $skip_title);
        
    GetOptions(
        "file=s"            => \$file,
        "output_column=i"   => \$output_column,
        "skip_title"        => \$skip_title,
    ) or show_perldoc();
    
    unless ($file) {
        show_perldoc('Must set --file');
    }    
    unless ($output_column and $output_column >= 1) {
        show_perldoc('Must set --output_column >= 1');
    }
    
    do_file($file, $output_column, $skip_title);
}

sub do_file {
    my ( $file, $output_column, $skip_title ) = @_;

    my $entries = parse_tab_delimited_file_to_array($file);
    if ($skip_title) {
        my $titles = shift(@$entries);
        
        splice (@$titles, $output_column - 1, 0, 'Number');
        print join("\t", @$titles), "\n";
        print STDERR "Skipping title line\n";
    }
   
    my $count = 0;

    foreach my $entry (@$entries) {
    
        $count++;
        splice (@$entry, $output_column - 1, 0, $count);
        print join("\t", @$entry), "\n";
    }
    
    print STDERR "\n";
    print STDERR "Lines numbered  : $count\n";
}
