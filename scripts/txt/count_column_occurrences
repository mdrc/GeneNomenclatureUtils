#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - count_column_occurrences

=head1 COMMAND LINE PARAMETERS

Required parameters
  --file                 file to be processed                
  --column               column number (>= 1)

Optional parameters
  --skip_title
  
=head1 DESCRIPTION

Reports the number of distinct values and how
often they occur in a tab-delimited file, ordered by frequency of
occurrence.

=head1 AUTHOR - mike_croning@hotmail.com
  
=cut

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::TabFileParser qw(
    parse_tab_delimited_file_to_array
    show_perldoc
);   
use Data::Dumper;
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $column_num, $skip_titles);
    GetOptions(
        "file=s"       => \$file,
        "column=i"     => \$column_num,
        "skip_title"   => \$skip_titles
    ) or show_perldoc();
    show_perldoc("Must set --file") unless $file;
    unless (defined($column_num) and $column_num >= 1) {
        show_perldoc("Must set --column (>=1)");
    }

    my $data = parse_tab_delimited_file_to_array($file, 'clean');
    my $titles;
    if ($skip_titles) {
        print STDERR "Column title line specified\n";
        $titles = shift(@$data);
    }
    
    my $contents = {};
    print "\n";
    print "Column number: $column_num\n";
    print "Column title : '", $titles->[$column_num-1], "'\n";
    
    foreach my $row (@$data) {
        my $content = $row->[$column_num-1];
        if (defined $content) {
            $contents->{$content}++ if defined $content;
        } else {
            $contents->{'_UNDEF_'}++;
        }
    }
    
   
    print "\nDistinct values: ", scalar(keys(%$contents)), "\n";
    
    my $count = 1;
    print "Rank\tFreq\tValue\n";
    foreach my $key (sort {$contents->{$b} <=> $contents->{$a}} (keys(%$contents))) {
        
        print $count++;
        print "\t";
        
        my $val = $contents->{$key};
        print "$val";
        print "\t";
        
        print "$key\n";
    }
    
} 
