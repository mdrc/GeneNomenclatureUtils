#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_ortho_gene_id_by_mgi_id

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to be processed                
  --mgi_id_column           column to find MGI IDs (>=1 )
  --output_column           column for output of ortho gene id (>=1)
  --output_attrib           attrib to output - one of:
                            mouse_entrez_gene_id
                            human_hgnc_id
                            human_gene_symbol
                            human_entrez_gene_id

Optional parameters
  --skip_title              skip title row
  --test                    for testing

=head1 DESCRIPTION

Adds an equivalent or orthologous gene id to the specified tab-delimited
file by MGI ID. 

Mouse Entrez Gene IDs can be added or human IDs from HGNC, Entrez Gene or 
gene symbols

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use Data::Dumper;
use GeneNomenclatureUtils::Parser;
use GeneNomenclatureUtils::TabFileParser qw(
    show_perldoc
);
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $mgi_id_column, $output_column, $skip_title
        , $output_attrib, $help);
        
    GetOptions(
        "file=s"            => \$file,
        "mgi_id_column=i"   => \$mgi_id_column,
        "output_column=i"   => \$output_column,
        "skip_title"        => \$skip_title,
        "output_attrib=s"   => \$output_attrib,
        "help"              => \$help
    ) or show_perldoc();
    
    my $parser = GeneNomenclatureUtils::Parser->new(
        'MGI_dir', 'HMD_HGNC_Accession.rpt', 'mgi_accession_id');
     
    ### Check we have the correct parameters
    if ($help) {
        print STDERR "Set --output_attrib to one of: "
            , join(", ", sort {$a cmp $b} keys(%{$parser->attributes})). "\n";
        exit;
    }
    unless ($file) {
        show_perldoc('Must set --file');
    }    
    unless ($mgi_id_column and $mgi_id_column >= 1) {
        show_perldoc('Must set --mgi_id_column >= 1');
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc('Must set --output_column >= 1');
    }
    unless ($output_attrib) {
        show_perldoc('Must set --output_attrib');
    }
    
    $parser->duplicates('delete'); ### Remove ambiguous mgi_id
    $parser->parse;

    ### Output attributes
    $parser->output_attribute($output_attrib);
    $parser->file_process_mode('translate');

    my $column_title = uc($output_attrib);
    $column_title =~ tr/_/ /;
    
    ### Convert
    $parser->process_file($file, $mgi_id_column, $output_column
        , $skip_title, $column_title);
}
