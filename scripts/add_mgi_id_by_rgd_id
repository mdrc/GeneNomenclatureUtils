#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_mgi_id_by_rgd_id

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to check
  --rgd_id_column           column with RGD IDs (>=1)  
  --output_column           column to output check results (>=1)
  
Optional parameters
  --skip_title              skip first (title) row

=head1 DESCRIPTION

Add orthologous mouse MGI IDs by RGD IDs to the specified column
of the tab-delimited file

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use DPStore::Utils qw(
    show_perldoc
);
use DPStore::Utils::TabFileParser qw(
    parse_tab_delimited_file_to_array
);
use DPStore::Utils::SeqIDNomenclature qw(
    check_or_translate_ids_in_file
    parse_rgd_orthologs_file
    parse_rgd_orthologs_file_entry
);
use Getopt::Long;
use Data::Dumper;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $rgd_id_column, $output_column, $skip_title);
        
    GetOptions(
        "file=s"               => \$file,
        "rgd_id_column=i"      => \$rgd_id_column,
        "output_column=i"      => \$output_column,
        "skip_title"           => \$skip_title,
    ) or show_perldoc();
    show_perldoc("Must set --file") unless $file;
    unless ($rgd_id_column and $rgd_id_column >= 1) {
        show_perldoc("Must set --rgd_id_column >= 1");
    }
    
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }
    
    my $code_ref = init_lookup();
    do_file($file, $rgd_id_column, $output_column, $skip_title, $code_ref);
}

sub do_file {
    my ( $file, $rgd_id_column, $output_column, $skip_title
        , $code_ref ) = @_;

    ### Parse nomenclature file(s)
    my ($parsed_by_rgd_id, $parsed_by_mgi_symbol) = parse_rgd_orthologs_file();

    ### Do the translation
    check_or_translate_ids_in_file($file, $parsed_by_rgd_id, 'MGI ID'
        , '^\d+$', $rgd_id_column, $output_column, $skip_title, 'translate'
        , $code_ref);
}

sub init_lookup {
    my $code = sub {
        my ( $id, $hash ) = @_;

        my $entry = $hash->{$id} or return;
        
        my $parsed_orthologs = parse_rgd_orthologs_file_entry($entry);
        my $mgi_id = $parsed_orthologs->{mouse_ortholog_mgi_id};
        return $mgi_id;
    }
}
