#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_synonyms_by_mgi_id

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to be processed
  --mgi_id_column           column containing MGI IDs (>=1)
  --output_column           column to output added results (>=1)
  
Optional parameters
  --skip_title              skip first (title) row
  --test                    debugging use
  
=head1 DESCRIPTION

Adds MGI synonyms to a tab-delimited file by MGI ID using data parsed
from the MGI nomenclature file 'MRK_Synonym.sql.rpt' which should be
in the directory pointed to by $ENV{MGI_dir}

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use Data::Dumper;
use DPStore::Utils qw(
    show_perldoc
);
use DPStore::Utils::SeqIDNomenclature qw(
    parse_mgi_synonym_file
);
use DPStore::Utils::TabFileParser qw(
    parse_tab_delimited_file_to_array
);

use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $mgi_id_column, $output_column, $skip_title
        , $test);
        
    GetOptions(
        "file=s"            => \$file,
        "mgi_id_column=i"   => \$mgi_id_column,
        "output_column=i"   => \$output_column,
        "skip_title"        => \$skip_title,
        "test"              => \$test,
    ) or show_perldoc();
    show_perldoc("Must set --file") unless $file;
    unless ($mgi_id_column and $mgi_id_column >= 1) {
        show_perldoc("Must set --mgi_symbol_column >= 1");
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }
    
    ### Parse nomenclature files
    my ($synonyms_by_mgi_id) = parse_mgi_synonym_file();

    ### Test ?
    do_test($synonyms_by_mgi_id) if $test;
    
    do_file($synonyms_by_mgi_id, $file, $mgi_id_column, $output_column
        , $skip_title, $test);
}

sub do_file {
    my ( $synonyms_by_mgi_id, $file, $mgi_id_column, $output_column
        , $skip_title, $test ) = @_;
    
    my $entries = parse_tab_delimited_file_to_array($file);
    if ($skip_title) {
        my $titles = shift(@$entries);
        
        splice (@$titles, $output_column - 1, 0, 'SYNONYMS');
        print join("\t", @$titles), "\n";
    }
   
    ### Loop over the MGI IDs
    
    my $found             = 0;
    my $not_found         = 0;
    my $nothing_to_lookup = 0;
    
    foreach my $entry (@$entries) {
    
        my $output = '';
        my $mgi_id = $entry->[$mgi_id_column - 1];
        unless ($mgi_id) {
            $nothing_to_lookup++;
        }
        
        ### Mouse symbol, synonym, synonym, ...
        
        my $synonyms = $synonyms_by_mgi_id->{$mgi_id};
        if ($synonyms) {
            shift(@$synonyms);
            foreach my $synonym (@$synonyms) {
                $output .= $synonym . ', ';
            }
            $output =~ s/,\s$//;
            $found++
        } else {
            $not_found++;
            print STDERR "Not found: '$mgi_id'\n";
        }
        
        splice (@$entry, $output_column - 1, 0, $output);
        print join("\t", @$entry), "\n";
    }
    
    print STDERR "\n";
    print STDERR "Found           : $found\n";
    print STDERR "Not found       : $not_found\n";
    print STDERR "Nothing to check: $nothing_to_lookup\n";
}

sub do_test {
    my ( $parsed_by_mgi_id ) = @_;
    
    my $val = 'MGI:1888986';
    print STDERR "TESTING: with '$val'\n";
    my $result = $parsed_by_mgi_id->{$val};
    print STDERR "RESULT : ", Dumper($result), "\n\n";
    exit;
}
