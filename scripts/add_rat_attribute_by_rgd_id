#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_rat_attribute_by_rgd_id

Required parameters
  --file                    file to be processed                
  --rgd_id_column           column to find RGD IDs (>=1 )
  --output_column           column for output of attribute (>=1)
  --output_attrib           attribute to output (use --help to see options)
  
Optional parameters
  --help                    Output list of available attributes
  --skip_title              skip title row

=head1 DESCRIPTION

Adds an attribute parsed from the GENES_RAT.txt file (in $ENV{RGD_dir}) to the
specified column in the tab-delimited file by look-up on RGD ID.

About 38 attributes are available, use --help to see the full list, these
include:

  ensembl_id
  entrez_gene
  symbol

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use Data::Dumper;
use DPStore::Utils qw(
    show_perldoc
);
use DPStore::Utils::SeqIDNomenclature qw(
    check_or_translate_ids_in_file
);
use DPStore::Utils::TabFileParser qw(
    parse_tab_delimited_file_to_array
);
use GeneNomenclatureUtils::Parser;
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $rgd_id_column, $output_column, $skip_title
        , $output_attrib, $help);
        
    GetOptions(
        "file=s"            => \$file,
        "rgd_id_column=i"   => \$rgd_id_column,
        "output_column=i"   => \$output_column,
        "skip_title"        => \$skip_title,
        "output_attrib=s"   => \$output_attrib,
        "help"              => \$help
    ) or show_perldoc();
    
    my $parser = GeneNomenclatureUtils::Parser->new(
        'RGD_dir', 'GENES_RAT.txt', 'gene_rgd_id');
    
    if ($help) {
        print STDERR "Set --output_attrib to one of: "
            , join(", ", sort {$a cmp $b} keys(%{$parser->get_attributes})). "\n";
        exit;
    }
    unless ($file) {
        show_perldoc('Must set --file');
    }    
    unless ($rgd_id_column and $rgd_id_column >= 1) {
        show_perldoc('Must set --rgd_id_column >= 1');
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc('Must set --output_column >= 1');
    }
    unless ($output_attrib) {
        show_perldoc('Must set --output_attribute');
    }
    $parser->validate_attribute($output_attrib);
    
    set_lookup_params($parser->name, $output_attrib);
    
    my $code_ref = init_lookup();
    my $parsed_by_rgd_id = $parser->get_parsed();
    
    my $column_title = uc($output_attrib);
    $column_title =~ tr/_/ /;
    
    check_or_translate_ids_in_file($file, $parsed_by_rgd_id, $column_title
        , '^\d+$', $rgd_id_column, $output_column, $skip_title, 'translate'
        , $code_ref);
}

{
    my ($parser_name, $attribute);
    sub set_lookup_params {
        ( $parser_name, $attribute ) = @_;
    }

    sub init_lookup {
        my $code = sub {
            my ( $id, $hash ) = @_;

            my $entry = $hash->{$id} or return;
            my $parsed_entry = 
                GeneNomenclatureUtils::ColumnParser::parse_row_to_named_attributes(
                    $parser_name, $entry);
            
            my $value = $parsed_entry->{$attribute};      
            return $value;
        }
    }
}
