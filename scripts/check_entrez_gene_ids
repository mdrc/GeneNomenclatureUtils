#!/software/bin/perl
### nomenclature

=pod

=head1 NAME - check_entrez_gene_ids

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                    file to be checked
  --entrez_gene_id_column   column containing IDs to check (>=1)
  --tax_id                  tax_id
  --output_column           column to output check results (>=1)
  
Optional parameters
  --skip_title              skip first (title) row
  --help|h

=head1 DESCRIPTION

Checks Entrez Gene IDs by looking for a nomenclature file
called 'gene2accession_tax_id' in the directory pointed to
by $ENV{ENTREZ_dir}, outputs to STDOUT

Nomenclature files are single-taxon extractions of:

wget ftp://ftp.ncbi.nih.gov/gene/DATA/gene2accession.gz
nice +5 gunzip gene2accession.gz

e.g. 'gene2accession_10090' - for human

Use:
GeneNomenclatureUtils/scripts/download_nomenclature_files

Then extract for a specific taxon with,
GeneNomenclatureUtils/scripts/extract_from_ncbi_gene2_accession


Example command line

./check_entrez_gene_ids --file=my_file.txt --entrez_gene_id_column=1
--output_column=1 --tax_id=9606 > my_output.txt

This will prepend a column to the file with the results of the 
check which will be one of: 'PASS', 'FAIL', 'NOTHING_TO_CHECK', 'INVALID'

In the example above the nomenclature file used would be
gene2accession_9606

=head1 AUTHOR - mike_croning@hotmail.com

=cut

use strict;
use warnings;
use Carp;
use DPStore::Utils qw(
    show_perldoc
);
use DPStore::Utils::SeqIDNomenclature qw(
    check_for_file
    check_or_translate_ids_in_file
);
use DPStore::Utils::TabFileParser qw(
   parse_tab_delimited_file_to_hash_keyed_by_column 
);
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ( $file, $column_num, $output_column, $tax_id, $skip_title );
    GetOptions(
        "file=s"                  => \$file,
        "entrez_gene_id_column=i" => \$column_num,
        "output_column=i"         => \$output_column,
        "tax_id=i"                => \$tax_id,
        "skip_title"              => \$skip_title,
        "help|h"                  => \&show_perldoc
    ) or show_perldoc();
    
    show_perldoc("Must specify --file") unless $file;
    unless ($column_num and $column_num >= 1) {
        show_perldoc("Must set --entrez_gene_id_column (>=1)");
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }
    unless ($tax_id and $tax_id >= 1) {
        show_perldoc("Must set --tax_id to integer >=1");
    }
    
    my $entrez_file      = 'gene2accession' . '_' . $tax_id;
    my $entrez_file_spec = check_for_file('ENTREZ_dir', $entrez_file);
    print STDERR "Using ID file: $entrez_file_spec\n"; 
    
    do_file($file, $entrez_file_spec, $column_num
        , $output_column, $tax_id, $skip_title);
}


sub do_file {
    my ( $file, $entrez_file, $column_num
        , $output_column, $tax_id, $skip_title ) = @_;

    ### Parse nomenclature file(s)
    my $entrez_genes = parse_tab_delimited_file_to_hash_keyed_by_column(
        $entrez_file, 2);
    print STDERR "Parsed ids   : ", scalar(keys(%$entrez_genes)), "\n";

    ### Do the check
    check_or_translate_ids_in_file($file, $entrez_genes, 'ENTREZ ID CHECK'
        , '^\d+$', $column_num, $output_column, $skip_title);
}
