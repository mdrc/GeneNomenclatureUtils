#!/usr/local/bin/perl
### nomenclature

=pod

=head1 NAME - add_approved_name_by_mgi_id

=head1 COMMAND LINE PARAMETERS 

Required parameters
  --file                        file to be processed
  --mgi_id_column               column containing MGI IDs (>= 1)
  --output_column               column to output added names (>= 1)
  
Optional parameters
  --skip_title                  skip first (title) row
    
=head1 DESCRIPTION

Adds the approved (protein) name to a tabular file by using data parsed
from the MGI nomenclature file 'MRK_List2.rpt' which should be in the
directory pointed to by $ENV{MGI_dir}

Look-up is done by the MGI ID e.g. MGI:95819; this example being  
called 'glutamate receptor, ionotropic, NMDA1 (zeta 1)'

=head1 AUTHOR - mike_croning@hotmail.com

=cut 

use strict;
use warnings;
use Carp;
use GeneNomenclatureUtils::Parser;
use GeneNomenclatureUtils::TabFileParser qw(
    show_perldoc
);
use Getopt::Long;

{
    print STDERR "\n$0\n", '=' x length($0), "\n\n";
    my ($file, $mgi_column, $output_column, $skip_title);
        
    GetOptions(
        "file=s"              => \$file,
        "mgi_id_column=i" => \$mgi_column,
        "output_column=i"     => \$output_column,
        "skip_title"          => \$skip_title,
    ) or show_perldoc();
    
    ### Check we have the correct parameters
    unless ($file) {
        show_perldoc('Must set --file');
    }
    unless ($mgi_column and $mgi_column >= 1) {
        show_perldoc("Must set --mgi_id_column >= 1");
    }
    unless ($output_column and $output_column >= 1) {
        show_perldoc("Must set --output_column >= 1");
    }
    
    ### Setup parser
    my $parser = GeneNomenclatureUtils::Parser->new(
        'MGI_dir', 'MRK_List2.rpt', 'mgi_accession_id');
    $parser->add_filter('type', 'nomatch', 'Gene'); #Excludes type !~ /Gene/   
    $parser->parse;
 
    ### Output attributes
    $parser->output_attribute('name');
    $parser->output_convert_case('capital');
    $parser->file_process_mode('translate');

    ### Convert
    $parser->process_file($file, $mgi_column, $output_column
        , $skip_title,  'APPR. NAME');
}
